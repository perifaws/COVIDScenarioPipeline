# This workflow will build and push a new container image to Amazon ECR

on:
  push:
    branches:
      - dataseed
    paths:
      - 'requirements.txt'
      - 'packages.R'
      - 'Dockerfile'
      - 'R/pkgs/**'

name: Deploy to Amazon ECR

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}
        # tag with the commit sha, ideally use git tags instead
        IMAGE_TAG_SHA: ${{ github.sha }}
        IMAGE_TAG_RUN: ${{ github.run_number }}
        IMAGE_TAG_REF: ${{ github.ref }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$(git rev-parse --short=8 $IMAGE_TAG_SHA) .
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$(git rev-parse --short=8 $IMAGE_TAG_SHA) $ECR_REGISTRY/$ECR_REPOSITORY:${IMAGE_TAG_REF##*/}-v$IMAGE_TAG_RUN
        docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$(git rev-parse --short=8 $IMAGE_TAG_SHA) $ECR_REGISTRY/$ECR_REPOSITORY:latest
        docker push $ECR_REGISTRY/$ECR_REPOSITORY
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY"

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}
